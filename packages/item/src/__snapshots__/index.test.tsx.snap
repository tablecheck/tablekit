// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Item should allow passing of custom className 1`] = `
.emotion-0 {
  box-sizing: border-box;
  height: 40px;
  min-height: 40px;
  padding: 0 12px;
  font-size: 14px;
  line-height: 20px;
  font-weight: 400;
  width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  background-color: transparent;
  color: #323232;
}

.emotion-0:focus {
  outline: none;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-0 .eyvug7s1,
.emotion-0 .eyvug7s0 {
  color: rgba(0, 0, 0, 0.66);
}

.emotion-0:focus {
  box-shadow: 0 0 0 2px #5192FC inset;
  border-radius: 6px;
}

.emotion-0:hover {
  background-color: rgba(0, 0, 0, 0.05);
  color: #323232;
}

.emotion-0:hover .eyvug7s1,
.emotion-0:hover .eyvug7s0 {
  color: rgba(0, 0, 0, 0.66);
}

<ForwardRef
  className="test-class"
>
  <ForwardRef
    aria-disabled={false}
    borderPosition="left"
    className="test-class"
    hasOnlyIcon={false}
    interactionState="default"
    isDisabled={false}
    isHidden={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    onMouseDown={[Function]}
    role="button"
    shouldCenterAlignment={false}
    size="regular"
    tabIndex={0}
  >
    <ItemBaseHtml
      aria-disabled={false}
      borderPosition="left"
      className="test-class"
      hasOnlyIcon={false}
      interactionState="default"
      isDisabled={false}
      isHidden={false}
      onClick={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      role="button"
      shouldCenterAlignment={false}
      size="regular"
      tabIndex={0}
    >
      <span
        aria-disabled={false}
        className="test-class emotion-0 emotion-1"
        onClick={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        role="button"
        tabIndex={0}
      />
    </ItemBaseHtml>
  </ForwardRef>
</ForwardRef>
`;

exports[`Item should correctly apply styling 1`] = `
.emotion-0 {
  box-sizing: border-box;
  height: 40px;
  min-height: 40px;
  padding: 0 12px;
  font-size: 14px;
  line-height: 20px;
  font-weight: 400;
  width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  background-color: transparent;
  color: #323232;
}

.emotion-0:focus {
  outline: none;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-0 .eyvug7s1,
.emotion-0 .eyvug7s0 {
  color: rgba(0, 0, 0, 0.66);
}

.emotion-0:focus {
  box-shadow: 0 0 0 2px #5192FC inset;
  border-radius: 6px;
}

.emotion-0:hover {
  background-color: rgba(0, 0, 0, 0.05);
  color: #323232;
}

.emotion-0:hover .eyvug7s1,
.emotion-0:hover .eyvug7s0 {
  color: rgba(0, 0, 0, 0.66);
}

<ForwardRef>
  <ForwardRef
    aria-disabled={false}
    borderPosition="left"
    hasOnlyIcon={false}
    interactionState="default"
    isDisabled={false}
    isHidden={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    onMouseDown={[Function]}
    role="button"
    shouldCenterAlignment={false}
    size="regular"
    tabIndex={0}
  >
    <ItemBaseHtml
      aria-disabled={false}
      borderPosition="left"
      hasOnlyIcon={false}
      interactionState="default"
      isDisabled={false}
      isHidden={false}
      onClick={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      role="button"
      shouldCenterAlignment={false}
      size="regular"
      tabIndex={0}
    >
      <span
        aria-disabled={false}
        className="emotion-0 emotion-1"
        onClick={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        role="button"
        tabIndex={0}
      />
    </ItemBaseHtml>
  </ForwardRef>
</ForwardRef>
`;
